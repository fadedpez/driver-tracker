// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: drivertracker.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoreDriverRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NameLast          string `protobuf:"bytes,1,opt,name=nameLast,proto3" json:"nameLast,omitempty"`
	NameFirst         string `protobuf:"bytes,2,opt,name=nameFirst,proto3" json:"nameFirst,omitempty"`
	DriverNumber      string `protobuf:"bytes,3,opt,name=driverNumber,proto3" json:"driverNumber,omitempty"`
	DriverNationality string `protobuf:"bytes,4,opt,name=driverNationality,proto3" json:"driverNationality,omitempty"`
}

func (x *StoreDriverRequest) Reset() {
	*x = StoreDriverRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drivertracker_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreDriverRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDriverRequest) ProtoMessage() {}

func (x *StoreDriverRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drivertracker_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDriverRequest.ProtoReflect.Descriptor instead.
func (*StoreDriverRequest) Descriptor() ([]byte, []int) {
	return file_drivertracker_proto_rawDescGZIP(), []int{0}
}

func (x *StoreDriverRequest) GetNameLast() string {
	if x != nil {
		return x.NameLast
	}
	return ""
}

func (x *StoreDriverRequest) GetNameFirst() string {
	if x != nil {
		return x.NameFirst
	}
	return ""
}

func (x *StoreDriverRequest) GetDriverNumber() string {
	if x != nil {
		return x.DriverNumber
	}
	return ""
}

func (x *StoreDriverRequest) GetDriverNationality() string {
	if x != nil {
		return x.DriverNationality
	}
	return ""
}

type StoreDriverResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Driver *Driver `protobuf:"bytes,1,opt,name=driver,proto3" json:"driver,omitempty"`
}

func (x *StoreDriverResponse) Reset() {
	*x = StoreDriverResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drivertracker_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreDriverResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreDriverResponse) ProtoMessage() {}

func (x *StoreDriverResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drivertracker_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreDriverResponse.ProtoReflect.Descriptor instead.
func (*StoreDriverResponse) Descriptor() ([]byte, []int) {
	return file_drivertracker_proto_rawDescGZIP(), []int{1}
}

func (x *StoreDriverResponse) GetDriver() *Driver {
	if x != nil {
		return x.Driver
	}
	return nil
}

type Driver struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NameLast          string `protobuf:"bytes,2,opt,name=nameLast,proto3" json:"nameLast,omitempty"`
	NameFirst         string `protobuf:"bytes,3,opt,name=nameFirst,proto3" json:"nameFirst,omitempty"`
	DriverNumber      string `protobuf:"bytes,4,opt,name=driverNumber,proto3" json:"driverNumber,omitempty"`
	DriverNationality string `protobuf:"bytes,5,opt,name=driverNationality,proto3" json:"driverNationality,omitempty"`
}

func (x *Driver) Reset() {
	*x = Driver{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drivertracker_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Driver) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Driver) ProtoMessage() {}

func (x *Driver) ProtoReflect() protoreflect.Message {
	mi := &file_drivertracker_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Driver.ProtoReflect.Descriptor instead.
func (*Driver) Descriptor() ([]byte, []int) {
	return file_drivertracker_proto_rawDescGZIP(), []int{2}
}

func (x *Driver) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Driver) GetNameLast() string {
	if x != nil {
		return x.NameLast
	}
	return ""
}

func (x *Driver) GetNameFirst() string {
	if x != nil {
		return x.NameFirst
	}
	return ""
}

func (x *Driver) GetDriverNumber() string {
	if x != nil {
		return x.DriverNumber
	}
	return ""
}

func (x *Driver) GetDriverNationality() string {
	if x != nil {
		return x.DriverNationality
	}
	return ""
}

type StoreTeamRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TeamName            string `protobuf:"bytes,1,opt,name=teamName,proto3" json:"teamName,omitempty"`
	TeamNationality     string `protobuf:"bytes,2,opt,name=teamNationality,proto3" json:"teamNationality,omitempty"`
	TeamPrincipal       string `protobuf:"bytes,3,opt,name=teamPrincipal,proto3" json:"teamPrincipal,omitempty"`
	TeamEstablishedYear string `protobuf:"bytes,4,opt,name=teamEstablishedYear,proto3" json:"teamEstablishedYear,omitempty"`
	TeamYearsActive     string `protobuf:"bytes,5,opt,name=teamYearsActive,proto3" json:"teamYearsActive,omitempty"`
}

func (x *StoreTeamRequest) Reset() {
	*x = StoreTeamRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drivertracker_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTeamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTeamRequest) ProtoMessage() {}

func (x *StoreTeamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_drivertracker_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTeamRequest.ProtoReflect.Descriptor instead.
func (*StoreTeamRequest) Descriptor() ([]byte, []int) {
	return file_drivertracker_proto_rawDescGZIP(), []int{3}
}

func (x *StoreTeamRequest) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *StoreTeamRequest) GetTeamNationality() string {
	if x != nil {
		return x.TeamNationality
	}
	return ""
}

func (x *StoreTeamRequest) GetTeamPrincipal() string {
	if x != nil {
		return x.TeamPrincipal
	}
	return ""
}

func (x *StoreTeamRequest) GetTeamEstablishedYear() string {
	if x != nil {
		return x.TeamEstablishedYear
	}
	return ""
}

func (x *StoreTeamRequest) GetTeamYearsActive() string {
	if x != nil {
		return x.TeamYearsActive
	}
	return ""
}

type StoreTeamResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Team *Team `protobuf:"bytes,1,opt,name=team,proto3" json:"team,omitempty"`
}

func (x *StoreTeamResponse) Reset() {
	*x = StoreTeamResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drivertracker_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreTeamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreTeamResponse) ProtoMessage() {}

func (x *StoreTeamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_drivertracker_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreTeamResponse.ProtoReflect.Descriptor instead.
func (*StoreTeamResponse) Descriptor() ([]byte, []int) {
	return file_drivertracker_proto_rawDescGZIP(), []int{4}
}

func (x *StoreTeamResponse) GetTeam() *Team {
	if x != nil {
		return x.Team
	}
	return nil
}

type Team struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                  string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TeamName            string `protobuf:"bytes,2,opt,name=teamName,proto3" json:"teamName,omitempty"`
	TeamNationality     string `protobuf:"bytes,3,opt,name=teamNationality,proto3" json:"teamNationality,omitempty"`
	TeamPrincipal       string `protobuf:"bytes,4,opt,name=teamPrincipal,proto3" json:"teamPrincipal,omitempty"`
	TeamEstablishedYear string `protobuf:"bytes,5,opt,name=teamEstablishedYear,proto3" json:"teamEstablishedYear,omitempty"`
	TeamYearsActive     string `protobuf:"bytes,6,opt,name=teamYearsActive,proto3" json:"teamYearsActive,omitempty"`
}

func (x *Team) Reset() {
	*x = Team{}
	if protoimpl.UnsafeEnabled {
		mi := &file_drivertracker_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Team) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Team) ProtoMessage() {}

func (x *Team) ProtoReflect() protoreflect.Message {
	mi := &file_drivertracker_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Team.ProtoReflect.Descriptor instead.
func (*Team) Descriptor() ([]byte, []int) {
	return file_drivertracker_proto_rawDescGZIP(), []int{5}
}

func (x *Team) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Team) GetTeamName() string {
	if x != nil {
		return x.TeamName
	}
	return ""
}

func (x *Team) GetTeamNationality() string {
	if x != nil {
		return x.TeamNationality
	}
	return ""
}

func (x *Team) GetTeamPrincipal() string {
	if x != nil {
		return x.TeamPrincipal
	}
	return ""
}

func (x *Team) GetTeamEstablishedYear() string {
	if x != nil {
		return x.TeamEstablishedYear
	}
	return ""
}

func (x *Team) GetTeamYearsActive() string {
	if x != nil {
		return x.TeamYearsActive
	}
	return ""
}

var File_drivertracker_proto protoreflect.FileDescriptor

var file_drivertracker_proto_rawDesc = []byte{
	0x0a, 0x13, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x74, 0x72, 0x61,
	0x63, 0x6b, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x22, 0xa0,
	0x01, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x73,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x22, 0x4e, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x22, 0xa4, 0x01, 0x0a, 0x06, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6e, 0x61, 0x6d, 0x65, 0x4c, 0x61, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x46, 0x69, 0x72, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d,
	0x65, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x72,
	0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x4e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x22, 0xda, 0x01, 0x0a, 0x10, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x61,
	0x6d, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x69, 0x6e, 0x63,
	0x69, 0x70, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x6d,
	0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x65, 0x61,
	0x6d, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x59, 0x65, 0x61, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x74, 0x65, 0x61, 0x6d, 0x45, 0x73, 0x74, 0x61,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x59, 0x65, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x74,
	0x65, 0x61, 0x6d, 0x59, 0x65, 0x61, 0x72, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x59, 0x65, 0x61, 0x72, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x22, 0x46, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x65,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x65,
	0x61, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x2e, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x04, 0x74, 0x65, 0x61, 0x6d, 0x22, 0xde, 0x01,
	0x0a, 0x04, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x65, 0x61,
	0x6d, 0x4e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x0d,
	0x74, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x65, 0x61, 0x6d, 0x50, 0x72, 0x69, 0x6e, 0x63, 0x69, 0x70,
	0x61, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x65, 0x61, 0x6d, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x59, 0x65, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x74, 0x65, 0x61, 0x6d, 0x45, 0x73, 0x74, 0x61, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64,
	0x59, 0x65, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x65, 0x61, 0x6d, 0x59, 0x65, 0x61, 0x72,
	0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74,
	0x65, 0x61, 0x6d, 0x59, 0x65, 0x61, 0x72, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x32, 0xe0,
	0x01, 0x0a, 0x10, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72,
	0x41, 0x50, 0x49, 0x12, 0x68, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x12, 0x2b, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b,
	0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x44, 0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2c, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x44,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a,
	0x09, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x12, 0x29, 0x2e, 0x64, 0x72, 0x69,
	0x76, 0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61,
	0x6c, 0x70, 0x68, 0x61, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x74, 0x72,
	0x61, 0x63, 0x6b, 0x65, 0x72, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x2e,
	0x53, 0x74, 0x6f, 0x72, 0x65, 0x54, 0x65, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x55, 0x5a, 0x53, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x64, 0x61, 0x6d, 0x6d, 0x69, 0x74, 0x62, 0x69, 0x6c, 0x6c, 0x79, 0x30, 0x6e, 0x65, 0x2f, 0x64,
	0x72, 0x69, 0x76, 0x65, 0x72, 0x2d, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x64, 0x72, 0x69, 0x76,
	0x65, 0x72, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x65, 0x72, 0x61, 0x70, 0x69, 0x61, 0x6c, 0x70, 0x68,
	0x61, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_drivertracker_proto_rawDescOnce sync.Once
	file_drivertracker_proto_rawDescData = file_drivertracker_proto_rawDesc
)

func file_drivertracker_proto_rawDescGZIP() []byte {
	file_drivertracker_proto_rawDescOnce.Do(func() {
		file_drivertracker_proto_rawDescData = protoimpl.X.CompressGZIP(file_drivertracker_proto_rawDescData)
	})
	return file_drivertracker_proto_rawDescData
}

var file_drivertracker_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_drivertracker_proto_goTypes = []interface{}{
	(*StoreDriverRequest)(nil),  // 0: drivertracker.api.alpha.StoreDriverRequest
	(*StoreDriverResponse)(nil), // 1: drivertracker.api.alpha.StoreDriverResponse
	(*Driver)(nil),              // 2: drivertracker.api.alpha.Driver
	(*StoreTeamRequest)(nil),    // 3: drivertracker.api.alpha.StoreTeamRequest
	(*StoreTeamResponse)(nil),   // 4: drivertracker.api.alpha.StoreTeamResponse
	(*Team)(nil),                // 5: drivertracker.api.alpha.Team
}
var file_drivertracker_proto_depIdxs = []int32{
	2, // 0: drivertracker.api.alpha.StoreDriverResponse.driver:type_name -> drivertracker.api.alpha.Driver
	5, // 1: drivertracker.api.alpha.StoreTeamResponse.team:type_name -> drivertracker.api.alpha.Team
	0, // 2: drivertracker.api.alpha.DriverTrackerAPI.StoreDriver:input_type -> drivertracker.api.alpha.StoreDriverRequest
	3, // 3: drivertracker.api.alpha.DriverTrackerAPI.StoreTeam:input_type -> drivertracker.api.alpha.StoreTeamRequest
	1, // 4: drivertracker.api.alpha.DriverTrackerAPI.StoreDriver:output_type -> drivertracker.api.alpha.StoreDriverResponse
	4, // 5: drivertracker.api.alpha.DriverTrackerAPI.StoreTeam:output_type -> drivertracker.api.alpha.StoreTeamResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_drivertracker_proto_init() }
func file_drivertracker_proto_init() {
	if File_drivertracker_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_drivertracker_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreDriverRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drivertracker_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreDriverResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drivertracker_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Driver); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drivertracker_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTeamRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drivertracker_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreTeamResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_drivertracker_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Team); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_drivertracker_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_drivertracker_proto_goTypes,
		DependencyIndexes: file_drivertracker_proto_depIdxs,
		MessageInfos:      file_drivertracker_proto_msgTypes,
	}.Build()
	File_drivertracker_proto = out.File
	file_drivertracker_proto_rawDesc = nil
	file_drivertracker_proto_goTypes = nil
	file_drivertracker_proto_depIdxs = nil
}
